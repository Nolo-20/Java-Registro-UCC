package interfaz;

import clases.Conexion;
import clases.Estudiante;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Consulta extends javax.swing.JFrame {

    private DefaultTableModel modelo;

    Conexion con = new Conexion();
    Connection conexion = (Connection) con.conectar();
    PreparedStatement ps;
    ResultSet res;
    captura cap = new captura();
    Estudiante e = new Estudiante();

    public Consulta() {
        initComponents();
        cargarInterfaz();
        cargarRegistros();
    }

    public void cargarInterfaz() {
        String Matriz[][] = {};
        String columna[] = {"ID", "Cedula", "Nombre1", "Nombre2", "Apellido1", "Apellido2", "Genero", "Direccion", "Correo", "Celular", "Carrera"};
        modelo = new DefaultTableModel(Matriz, columna) {
            public boolean isCellEditable(int fila, int columna) {
                if (columna == 11) {
                    return true;
                } else {
                    return false;
                }
            }
        };
        Tabladatos.setModel(modelo);
    }

    public void cargarRegistros() {
        try {
            ps = conexion.prepareStatement("SELECT e.*, p.Programa AS programa "
                    + "FROM estudiante e "
                    + "INNER JOIN programa_estudiante pe ON e.ID_Estudiante = pe.id_estudiante "
                    + "INNER JOIN programa p ON pe.id_programa = p.id_programa;");
            res = ps.executeQuery();

            modelo.setRowCount(0);

            while (res.next()) {
                String id = res.getString("ID_Estudiante");
                String cedula = res.getString("Cedula");
                String nombre1 = res.getString("Nombre1");
                String nombre2 = res.getString("Nombre2");
                String apellido1 = res.getString("Apellido1");
                String apellido2 = res.getString("Apellido2");
                String genero = res.getString("Genero");
                String correo = res.getString("Correo");
                String direccion = res.getString("Direccion");
                String celular = res.getString("Celular");
                String programa = res.getString("Programa");

                Object[] fila = {id, cedula, nombre1, nombre2, apellido1, apellido2, genero, direccion, correo, celular, programa};
                modelo.addRow(fila);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    public boolean hayregistro() {
        try {
            ps = conexion.prepareStatement("SELECT COUNT(*) AS total FROM estudiante");
            res = ps.executeQuery();

            if (res.next()) {
                int total = res.getInt("total");
                return total > 0;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabladatos = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        buscar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Buscar:");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        Tabladatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Tabladatos);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/25275.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1345823.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/7492386.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/database_search_regular_icon_205400.png"))); // NOI18N

        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel3.setText("Resgistro de Estudiantes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(195, 195, 195)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(19, 19, 19)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(btnEliminar)
                                .addGap(131, 131, 131)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(jButton4))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(20, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        captura open = new captura();
        open.setVisible(true);
        open.setLocationRelativeTo(null);
        this.dispose();

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        Edit_estudiante open = new Edit_estudiante();
        open.setVisible(true);
        open.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (hayregistro()) {
            btnNuevo.setEnabled(true);
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
        } else if (!hayregistro()) {
            btnNuevo.setEnabled(true);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);
        }

        try {
            ps = conexion.prepareStatement("SELECT e.*, p.Programa AS programa "
                    + "FROM estudiante e "
                    + "INNER JOIN programa_estudiante pe ON e.ID_Estudiante = pe.id_estudiante "
                    + "INNER JOIN programa p ON pe.id_programa = p.id_programa;");
            res = ps.executeQuery();

            modelo.setRowCount(0);

            while (res.next()) {
                String id = res.getString("ID_Estudiante");
                String cedula = res.getString("Cedula");
                String nombre1 = res.getString("Nombre1");
                String nombre2 = res.getString("Nombre2");
                String apellido1 = res.getString("Apellido1");
                String apellido2 = res.getString("Apellido2");
                String genero = res.getString("Genero");
                String correo = res.getString("Correo");
                String direccion = res.getString("Direccion");
                String celular = res.getString("Celular");
                String programa = res.getString("Programa");

                Object[] fila = {id, cedula, nombre1, nombre2, apellido1, apellido2, genero, direccion, correo, celular, programa};
                modelo.addRow(fila);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = Tabladatos.getSelectedRow();
        int columna = Tabladatos.getSelectedColumn();

        try {
            if (fila == -1 || columna == -1) {
                JOptionPane.showMessageDialog(null, "No se ha escogido un estudiante para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {

                String idselect = Tabladatos.getValueAt(fila, 0).toString();

                ps = conexion.prepareStatement("DELETE FROM programa_estudiante WHERE ID_estudiante=?;");
                ps.setString(1, idselect);

                int respro = ps.executeUpdate();

                ps = conexion.prepareStatement("DELETE FROM estudiante WHERE ID_estudiante=?;");
                ps.setString(1, idselect);

                int res = ps.executeUpdate();

                if (res > 0 && respro > 0) {
                    JOptionPane.showMessageDialog(null, "Estudiante Eliminado");
                    if (!hayregistro()) {
                        btnNuevo.setEnabled(true);
                        btnModificar.setEnabled(false);
                        btnEliminar.setEnabled(false);
                    }
                    cap.limpiar();
                    ((DefaultTableModel) Tabladatos.getModel()).removeRow(fila);
                } else {
                    JOptionPane.showMessageDialog(null, "Error ");
                    cap.limpiar();
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Menu open = new Menu();
        open.setVisible(true);
        open.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyPressed
                String busqueda = buscar.getText();

        try {
            ps = conexion.prepareStatement("SELECT e.*, p.Programa AS programa "
                    + "FROM estudiante e "
                    + "INNER JOIN programa_estudiante pe ON e.ID_Estudiante = pe.id_estudiante "
                    + "INNER JOIN programa p ON pe.id_programa = p.id_programa "
                    + "WHERE e.id_estudiante LIKE ? OR e.nombre1 LIKE ? OR e.nombre2 LIKE ? OR e.apellido1 LIKE ? OR e.apellido2 LIKE ? OR e.genero LIKE ? OR e.correo LIKE ? OR e.direccion LIKE ? OR e.celular LIKE ? OR p.Programa LIKE ?");

            for (int i = 1; i <= 10; i++) {
                ps.setString(i, "%" + busqueda + "%");
            }

            res = ps.executeQuery();

            modelo.setRowCount(0);

            while (res.next()) {
                String id = res.getString("ID_Estudiante");
                String cedula = res.getString("Cedula");
                String nombre1 = res.getString("Nombre1");
                String nombre2 = res.getString("Nombre2");
                String apellido1 = res.getString("Apellido1");
                String apellido2 = res.getString("Apellido2");
                String genero = res.getString("Genero");
                String correo = res.getString("Correo");
                String direccion = res.getString("Direccion");
                String celular = res.getString("Celular");
                String programa = res.getString("Programa");

                Object[] fila = {id, cedula, nombre1, nombre2, apellido1, apellido2, genero, direccion, correo, celular, programa};
                modelo.addRow(fila);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_buscarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabladatos;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JTextField buscar;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
